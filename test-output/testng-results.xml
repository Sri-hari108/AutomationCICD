<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="0" total="6" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-04-27T15:46:35 IST" name="Suite" finished-at="2024-04-27T15:47:51 IST" duration-ms="76234">
    <groups>
      <group name="ErrorValidation">
        <method signature="ErrorValidation.productErrorValidation()[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.ErrorValidation@60df60da]" name="productErrorValidation" class="RahulShethyAcademy.SeleniumFrameworkDesign.ErrorValidation"/>
      </group> <!-- ErrorValidation -->
      <group name="purchase">
        <method signature="StandAloneTest.submitOrder(java.util.HashMap)[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.StandAloneTest@19b93fa8]" name="submitOrder" class="RahulShethyAcademy.SeleniumFrameworkDesign.StandAloneTest"/>
      </group> <!-- purchase -->
    </groups>
    <test started-at="2024-04-27T15:46:35 IST" name="Error Validation" finished-at="2024-04-27T15:47:30 IST" duration-ms="55008">
      <class name="RahulShethyAcademy.SeleniumFrameworkDesign.ErrorValidation">
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.ErrorValidation@60df60da]" started-at="2024-04-27T15:46:35 IST" name="lunchApplication" finished-at="2024-04-27T15:46:56 IST" duration-ms="20575" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method retried="true" signature="loginErrorValidation()[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.ErrorValidation@60df60da]" started-at="2024-04-27T15:46:56 IST" name="loginErrorValidation" finished-at="2024-04-27T15:47:00 IST" duration-ms="3938" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrects email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrects email or password.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at RahulShethyAcademy.SeleniumFrameworkDesign.ErrorValidation.loginErrorValidation(ErrorValidation.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="shutDown()[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.ErrorValidation@60df60da]" started-at="2024-04-27T15:47:00 IST" name="shutDown" finished-at="2024-04-27T15:47:00 IST" duration-ms="392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shutDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.ErrorValidation@60df60da]" started-at="2024-04-27T15:47:00 IST" name="lunchApplication" finished-at="2024-04-27T15:47:19 IST" duration-ms="18634" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="loginErrorValidation()[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.ErrorValidation@60df60da]" started-at="2024-04-27T15:47:19 IST" name="loginErrorValidation" finished-at="2024-04-27T15:47:20 IST" duration-ms="797" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrects email or password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrects email or password.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at RahulShethyAcademy.SeleniumFrameworkDesign.ErrorValidation.loginErrorValidation(ErrorValidation.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.retryFailed(TestInvoker.java:213)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:58)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="shutDown()[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.ErrorValidation@60df60da]" started-at="2024-04-27T15:47:21 IST" name="shutDown" finished-at="2024-04-27T15:47:22 IST" duration-ms="1095" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shutDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.ErrorValidation@60df60da]" started-at="2024-04-27T15:47:22 IST" name="lunchApplication" finished-at="2024-04-27T15:47:27 IST" duration-ms="4947" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="productErrorValidation()[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.ErrorValidation@60df60da]" started-at="2024-04-27T15:47:27 IST" name="productErrorValidation" finished-at="2024-04-27T15:47:30 IST" duration-ms="2902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productErrorValidation -->
        <test-method is-config="true" signature="shutDown()[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.ErrorValidation@60df60da]" started-at="2024-04-27T15:47:30 IST" name="shutDown" finished-at="2024-04-27T15:47:30 IST" duration-ms="527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shutDown -->
      </class> <!-- RahulShethyAcademy.SeleniumFrameworkDesign.ErrorValidation -->
    </test> <!-- Error Validation -->
    <test started-at="2024-04-27T15:46:35 IST" name="Submit Test" finished-at="2024-04-27T15:47:51 IST" duration-ms="76231">
      <class name="RahulShethyAcademy.SeleniumFrameworkDesign.StandAloneTest">
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.StandAloneTest@19b93fa8]" started-at="2024-04-27T15:46:36 IST" name="lunchApplication" finished-at="2024-04-27T15:47:05 IST" duration-ms="29719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.StandAloneTest@19b93fa8]" started-at="2024-04-27T15:47:05 IST" name="submitOrder" data-provider="getData" finished-at="2024-04-27T15:47:27 IST" duration-ms="21722" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Radha@108, email=jagnath52kol@gmail.com, productName=IPHONE 13 PRO}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="shutDown()[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.StandAloneTest@19b93fa8]" started-at="2024-04-27T15:47:27 IST" name="shutDown" finished-at="2024-04-27T15:47:28 IST" duration-ms="659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shutDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.StandAloneTest@19b93fa8]" started-at="2024-04-27T15:47:28 IST" name="lunchApplication" finished-at="2024-04-27T15:47:35 IST" duration-ms="6788" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="submitOrder(java.util.HashMap)[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.StandAloneTest@19b93fa8]" started-at="2024-04-27T15:47:35 IST" name="submitOrder" data-provider="getData" finished-at="2024-04-27T15:47:44 IST" duration-ms="9733" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Radha@108, email=RadhaKrishna108@gmail.com, productName=ADIDAS ORIGINAL}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitOrder -->
        <test-method is-config="true" signature="shutDown()[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.StandAloneTest@19b93fa8]" started-at="2024-04-27T15:47:44 IST" name="shutDown" finished-at="2024-04-27T15:47:44 IST" duration-ms="146" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shutDown -->
        <test-method is-config="true" signature="lunchApplication()[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.StandAloneTest@19b93fa8]" started-at="2024-04-27T15:47:44 IST" name="lunchApplication" finished-at="2024-04-27T15:47:50 IST" duration-ms="5688" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lunchApplication -->
        <test-method signature="orderHistoryValidation()[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.StandAloneTest@19b93fa8]" started-at="2024-04-27T15:47:50 IST" name="orderHistoryValidation" finished-at="2024-04-27T15:47:51 IST" depends-on-methods="RahulShethyAcademy.SeleniumFrameworkDesign.StandAloneTest.submitOrder" duration-ms="1155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderHistoryValidation -->
        <test-method is-config="true" signature="shutDown()[pri:0, instance:RahulShethyAcademy.SeleniumFrameworkDesign.StandAloneTest@19b93fa8]" started-at="2024-04-27T15:47:51 IST" name="shutDown" finished-at="2024-04-27T15:47:51 IST" duration-ms="147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shutDown -->
      </class> <!-- RahulShethyAcademy.SeleniumFrameworkDesign.StandAloneTest -->
    </test> <!-- Submit Test -->
  </suite> <!-- Suite -->
</testng-results>
